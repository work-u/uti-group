<?php

/**
 * @file
 * Defines installation code.
 */

/**
 * Implements hook_install().
 */
function recruit_application_install() {
  // Create default application type.
  $types = array(
    array(
      'type' => 'recruit_application',
      'label' => 'Application',
      'weight' => 0,
      'description' => 'Default application.',
    ),
  );

  foreach ($types as $type) {
    $application_type = entity_create('recruit_application_type', $type);
    $application_type->save();
    // Configure application type.
    recruit_application_configure_application_type($application_type);
  }

  // Add application reference field on default job content type.
  recruit_application_add_application_field('node', 'recruit_job');
}

/**
 * Implements hook_schema().
 */
function recruit_application_schema() {
  $schema = array();

  $schema['recruit_application'] = array(
    'description' => 'The base table for applications.',
    'fields' => array(
      'aid' => array(
        'description' => 'The primary identifier for the application.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The type (bundle) of this application.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'ID of Drupal user creator.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the application was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the application was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('aid'),
  );

  $schema['recruit_application_type'] = array(
    'description' => 'Stores information about all defined application types.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique application type ID.',
      ),
      'type' => array(
        'description' => 'The machine-readable name of this type.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable name of this type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'A brief description of this type.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'medium',
        'translatable' => TRUE,
      ),
    ) + entity_exportable_schema_fields(),
    'primary key' => array('id'),
    'unique keys' => array(
      'type' => array('type'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_field_schema().
 */
function recruit_application_field_schema($field) {
  $columns = array(
    'type' => array(
      'type' => 'varchar',
      'length' => 32,
      'not null' => FALSE,
    ),
  );
  $indexes = array(
    'type' => array('type'),
  );
  return array(
    'columns' => $columns,
    'indexes' => $indexes,
  );
}
